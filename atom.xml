<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Neverland</title>
  
  <subtitle>你是我不愿醒来的梦啊&lt;br&gt;真是柔情一场</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ir1d.cf/"/>
  <updated>2018-09-17T16:03:10.387Z</updated>
  <id>https://ir1d.cf/</id>
  
  <author>
    <name>Ir1d</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DailyNotes 18/9/17</title>
    <link href="https://ir1d.cf/2018/09/17/DailyNotes-18-9-17/"/>
    <id>https://ir1d.cf/2018/09/17/DailyNotes-18-9-17/</id>
    <published>2018-09-17T15:21:57.000Z</published>
    <updated>2018-09-17T16:03:10.387Z</updated>
    
    <content type="html"><![CDATA[<ul><li>ics</li><li>数算实习</li></ul><a id="more"></a><p>今日体验了 ics…… 感觉看日程表即将炸裂 QAQ</p><p>数算实习讲了一节课并查集…… 惊了它竟然在算导上单独占一章</p><hr><p>nan 平方 $\geq 0$</p><p>ics 课上讨论是不是浮点数平方大于等于 0 一直成立……</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> x = <span class="number">1</span>/<span class="number">0.</span>;</span><br><span class="line"><span class="keyword">if</span> (x * x &gt;= <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"= ="</span>);</span><br></pre></td></tr></table></figure><hr><p>平均复杂度 &amp; 平摊</p><p>说一下我的理解<br>前者是指输入满足某种概率分布，然后考虑输入的平均情况进行分析。<br>后者应该是把总代价平均到一个周期内来承担。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;ics&lt;/li&gt;
&lt;li&gt;数算实习&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="DailyNotes" scheme="https://ir1d.cf/tags/DailyNotes/"/>
    
  </entry>
  
  <entry>
    <title>DailyNotes 18/9/15</title>
    <link href="https://ir1d.cf/2018/09/15/DailyNotes-18-9-15/"/>
    <id>https://ir1d.cf/2018/09/15/DailyNotes-18-9-15/</id>
    <published>2018-09-15T03:13:11.000Z</published>
    <updated>2018-09-15T16:12:39.936Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="Transpose-Matrix"><a href="#Transpose-Matrix" class="headerlink" title="Transpose Matrix"></a>Transpose Matrix</h2><p>把一个矩阵转置</p><p>掌握了二维数组 reserve 的姿势</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res(A[<span class="number">0</span>].size(), <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(A.size()));</span><br></pre></td></tr></table></figure><p>输入一个指针一定要各种判是不是空的，比如给你的 root = =</p><h2 id="好像-cv2-resize-和-scipy-imresize-不一样啊？？"><a href="#好像-cv2-resize-和-scipy-imresize-不一样啊？？" class="headerlink" title="好像 cv2.resize 和 scipy.imresize 不一样啊？？"></a>好像 cv2.resize 和 scipy.imresize 不一样啊？？</h2><p>看 EDSR 的 issue 区里面有人说有 artifact，然后作者说你是不是没用 bicubic。人家说我用的啊，最后发现把 cv2 的换成 scipy 就好了…… 好神奇哎</p><p><a href="https://stackoverflow.com/questions/26823140/imresize-trying-to-understand-the-bicubic-interpolation/26823261#26823261" target="_blank" rel="noopener">https://stackoverflow.com/questions/26823140/imresize-trying-to-understand-the-bicubic-interpolation/26823261#26823261</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Transpose-Matrix&quot;&gt;&lt;a href=&quot;#Transpose-Matrix&quot; class=&quot;headerlink&quot; title=&quot;Transpose Matrix&quot;&gt;&lt;/a&gt;Transpose Matrix&lt;/h2
      
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="paperReading" scheme="https://ir1d.cf/tags/paperReading/"/>
    
  </entry>
  
  <entry>
    <title>Dailynotes 18/9/14</title>
    <link href="https://ir1d.cf/2018/09/14/Dailynotes-18-9-14/"/>
    <id>https://ir1d.cf/2018/09/14/Dailynotes-18-9-14/</id>
    <published>2018-09-14T12:14:29.000Z</published>
    <updated>2018-09-14T17:50:21.687Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>Zero-shot learning 指的是我们之前没有这个类别的训练样本。但是我们可以学习到一个映射X-&gt;Y。如果这个映射足够好的话，我们就可以处理没有看到的类了。</p><p>One-shot learning 指的是我们在训练样本很少，甚至只有一个的情况下，依旧能做预测。<br>如何做到呢？可以在一个大数据集上学到general knowledge（具体的说，也可以是X-&gt;Y的映射），然后再到小数据上有技巧的update</p><p>颓废终日。。。</p><p>no gain this week….</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;名词解释&quot;&gt;&lt;a href=&quot;#名词解释&quot; class=&quot;headerlink&quot; title=&quot;名词解释&quot;&gt;&lt;/a&gt;名词解释&lt;/h2&gt;&lt;p&gt;Zero-shot learning 指的是我们之前没有这个类别的训练样本。但是我们可以
      
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="paperReading" scheme="https://ir1d.cf/tags/paperReading/"/>
    
  </entry>
  
  <entry>
    <title>DailyNotes 9.10</title>
    <link href="https://ir1d.cf/2018/09/10/DailyNotes-9-10/"/>
    <id>https://ir1d.cf/2018/09/10/DailyNotes-9-10/</id>
    <published>2018-09-10T14:22:48.000Z</published>
    <updated>2018-09-10T18:33:59.986Z</updated>
    
    <content type="html"><![CDATA[<p>其实今天没有读什么文章，不过昨天配了 reddit 的订阅，感觉很厉害。</p><p>用上 hexoeditor 以及 hexo new 学会加引号之后，感觉操作上顺畅了很多。</p><a id="more"></a><h2 id="Are-result-images-in-research-papers-on-GANs-and-image-attribution-hand-picked-or-random"><a href="#Are-result-images-in-research-papers-on-GANs-and-image-attribution-hand-picked-or-random" class="headerlink" title="Are result images in research papers on GANs and image attribution hand-picked or random"></a>Are result images in research papers on GANs and image attribution hand-picked or random</h2><p>很有趣的一个问题，文章中的效果图是随机的吗，还是精心挑选的？</p><p>显然这是挑出来的吧（<br>肯定要选效果最好的啊<br>甚至还有这样的评论</p><blockquote><p>In a presentation by Goodfellow he says that he copy pasted the original images as the gan quality wasnt very good.</p></blockquote><p>“我没有撒谎，我只是没有说出全部真相”<br>感觉大家都是在挑对自己有利的事实来说话……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实今天没有读什么文章，不过昨天配了 reddit 的订阅，感觉很厉害。&lt;/p&gt;
&lt;p&gt;用上 hexoeditor 以及 hexo new 学会加引号之后，感觉操作上顺畅了很多。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="paperReading" scheme="https://ir1d.cf/tags/paperReading/"/>
    
  </entry>
  
  <entry>
    <title>summer2018 总结</title>
    <link href="https://ir1d.cf/2018/09/10/summer2018-%E6%80%BB%E7%BB%93/"/>
    <id>https://ir1d.cf/2018/09/10/summer2018-总结/</id>
    <published>2018-09-10T08:08:11.000Z</published>
    <updated>2018-09-10T16:19:30.248Z</updated>
    
    <content type="html"><![CDATA[<ul><li>summer2018</li></ul><a id="more"></a><p>为什么今天来写呢…… 因为今天自作主张给自己放了一天假，整理一下XD</p><p>期末考之后自信满满，觉得肯定成绩特别好，然而后来发现完全翻车，比上学期还惨烈。<br>对于这种事情我觉得还是完全是自己的原因，比如期中的时候就说期末一定要考这块内容，然后期末的时候忙着忙着就忘记了…… 然而期中的时候我这块没有错，期末的时候记混了然后就翻车了。<br>期中的时候就有遇到细节上翻车，期末的时候又因为哪里少了什么什么结果扣了一堆分……<br>完全是在造孽啊，你想大一干了这么多事情，有什么可以写进 cv 的？最后不还是 GPA 写了进去= =</p><p>运气好的是，刘老师收留了我，虽然感觉自己可能很快就被自己劝退了，但是感觉接触到这个崭新的世界也是一件蛮有意思的事情呢（啧，感觉自己最近很喜欢说“一件蛮有意思的事情呢”）。<br>这个夏天主要在学一些很基础的事情，开始写周报，读了一些论文，python 水平有了很大提升，也认识到了一些局限，不过也认识到了很 nice 的新朋友们，也有了一些希望。万分感激！</p><p>后来去搞 OI Wiki，也下了很大功夫，最大的决心来自于程设考试前立了个 flag，说考完试我肯定要把这些东西好好总结总结…… 然后考完试就忘记了…… 有天夜里突然想起来，到 ExOJ 群里问了下 “你们觉得怎样”，然后趁机拉了个群。开始的时候其实完全是自己在写，后来跟高中的几个小伙伴交流了一下，得到了一些支持，再后来松给了我一份资料Qrz…… 然后就很努力地在宣传，非常感谢各方朋友们的支持，遇到了一些志同道合的小伙伴，感觉还是很有希望的呢。<br>关于 2016-2018，在 footer 里这么写，是因为用了一些 2016 年的和褚老板郑老板一起搞的那个项目里的东西啦～<br>至于为什么想要做这个 wiki，那就说来话长暂且不表……<br>这个暑假搞这个项目让我明白了很多人和很多事，感觉如果没有这段经历，可能不会有这么多思考吧 XD<br>折腾的过程中也涨了很多姿势，虽然不知道以后能不能用得上，但是还是蛮有成就感的呢</p><p>开学之后瀚哥就不留在北京了，不知何时才能再相见…… 十分感激这段时间的帮助，感谢对我的种种 naive 的包容，这段经历对我改变很大，谢谢！<br>woc hexo 竟然不需要空行就能分段…… 学到了</p><p>军训…… 太扎心了，暂且不表。三院的大夫也非常 nice，他不和你说治不好了，他说是终身疾病…………</p><p>下学期课一定要好好学习…… 别去搞什么乱七八糟的了。很久以前就看过“时间规划是王道”，然而还是把自己搞得一团糟。写个人陈述的时候找到了很有趣的一段话，“I will prioritize my interests”，感觉是这样……</p><p>要好好的</p><p>昨天起八听说 shaonv 去了头条，<br>我们都有光明的未来，<br>嗯</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;summer2018&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Github Bot 踩坑</title>
    <link href="https://ir1d.cf/2018/09/10/Github-Bot-%E8%B8%A9%E5%9D%91/"/>
    <id>https://ir1d.cf/2018/09/10/Github-Bot-踩坑/</id>
    <published>2018-09-10T07:22:01.000Z</published>
    <updated>2018-09-10T08:07:57.585Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://github.com/24OI/linter" target="_blank" rel="noopener">https://github.com/24OI/linter</a></li></ul><a id="more"></a><p>主要在搞如何跑一个自动格式化 markdown 代码的 bot，尝试了 probot，直接 octokit，最后发现实在是还不如自己写个 .sh 来搞= =</p><p>是这样的，probot 的问题是 app 安装在主仓库里，权限限制在主仓库里，如果想要给 pr 里面 push 更新，就需要 fork 里面也安装了这个 app，然而这个体验实在是太糟糕了……</p><p>至于 octokit，实际上 probot 调用的也是这个接口，就想要不直接用它？然而发现它的 api 是调用的 updateFile，一直报错。得知这东西会对每个修改的文件建一个 commit，感觉即使调出来了也是要爆炸= =</p><p>干脆直接上 .sh 来搞这个 lint 的过程好了，octokit 仅用来操作 webhook。</p><p>介绍一下一些坑吧…… 开始写这种总结发现搞到最后其实很难记得都遇到过哪些问题，真的佩服那些把教程写得清清楚楚的大佬们</p><p>nodejs 的 exec 如果运行一个 .sh 的话，它的环境变量是空的，source 或者指定 uid 好像都不好用，要手动声明一下才行。</p><p>抄 travis 的 log 学到了高超的 git 技巧，可惜后来没用上。</p><p>哦还有 probot 需要那个 installation_id，如果直接 redeliver payload 可能会爆出各种错。 </p><p>slack 里面维护者回复很及时…… 真的厉害。后来还看到原来 probot 在 gsoc 里面…… QAQ</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/24OI/linter&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/24OI/linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="Github" scheme="https://ir1d.cf/tags/Github/"/>
    
      <category term="probot" scheme="https://ir1d.cf/tags/probot/"/>
    
      <category term="Node.js" scheme="https://ir1d.cf/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>mathjax-node-踩坑</title>
    <link href="https://ir1d.cf/2018/09/05/mathjax-node-%E8%B8%A9%E5%9D%91/"/>
    <id>https://ir1d.cf/2018/09/05/mathjax-node-踩坑/</id>
    <published>2018-09-05T02:47:34.000Z</published>
    <updated>2018-09-05T12:22:45.173Z</updated>
    
    <content type="html"><![CDATA[<p>配置 mathjax-node</p><a id="more"></a><p>motivation 是发现 OI Wiki 上面有的页面现在就已经有大量公式了…… 本机就能渲染上 3-4s，感觉日后再堆公式进去可能吃不消。</p><p>然后就研究了下 mathjax-node，发现这玩意需要手动分析 DOM 把 mathjax 部分取出来喂给它……</p><p>于是鸽了好久，直到有一天在 mathjax-node 的 README 最底下看到了个 mathjax-node-page，发现这个已经封装好了，直接把 html 丢给它就可以啦。</p><p>跑了下发现情况不妙…… preview 没有关掉，导致现在会双倍公式，试了下没啥好方法，于是用 regex 给搞掉了（写法参考 OI Wiki 的仓库）</p><p>然后就遇到了个问题：中文的字体用的 monospace，会重叠起来。开了个 issue 人家表示因为是 server-side 确定字的大小，你需要自己调这玩意= =</p><p><a href="https://github.com/mathjax/MathJax-node/issues/424" target="_blank" rel="noopener">https://github.com/mathjax/MathJax-node/issues/424</a></p><p>然后听说 monospace 在 win 上面有可能 fall-back 成宋体= =</p><p>hmmmmm 我觉得其实还可以接受啊？</p><p>upd: 好像可以浏览器端自己设置，那就这样吧，不管了</p><p>upd: 啧，发现公式不能自己断行，手机上显示效果很不好（其实不是断行，原版的话公式比较长会溢出。。现在的会把公式缩小= =</p><p>以及发现 netlify 真的是个好东西…… 之前找了很久忘记在哪看到的，后来发现果然是 RSSHub 里面= =</p><p>server-side render 本机跑很久然而放到 travis 和 netlify 上面好像还没超时（</p><p>hmmmmm 看了下 netlify 上跑一次需要 3min 我觉得海星？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;配置 mathjax-node&lt;/p&gt;
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="mathjax-node" scheme="https://ir1d.cf/tags/mathjax-node/"/>
    
  </entry>
  
  <entry>
    <title>Rain Streak Removal for Single Image via Kernel Guided CNN</title>
    <link href="https://ir1d.cf/2018/09/03/Rain-Streak-Removal-for-Single-Image-via-Kernel-Guided-CNN/"/>
    <id>https://ir1d.cf/2018/09/03/Rain-Streak-Removal-for-Single-Image-via-Kernel-Guided-CNN/</id>
    <published>2018-09-03T04:38:31.000Z</published>
    <updated>2018-09-03T14:53:34.627Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Rain Streak Removal for Single Image via Kernel Guided CNN</li></ul><a id="more"></a><h2 id="Rain-Streak-Removal-for-Single-Image-via-Kernel-Guided-CNN"><a href="#Rain-Streak-Removal-for-Single-Image-via-Kernel-Guided-CNN" class="headerlink" title="Rain Streak Removal for Single Image via Kernel Guided CNN"></a>Rain Streak Removal for Single Image via Kernel Guided CNN</h2><p>motivation 是已有方法不能很好地处理 line-pattern texture 和 rain streak。</p><p>本文中作者表示既然雨线是因为 motion blur 和 scattering 产生的，不妨把雨线导致的降质看作是 motion blur。然后这里假设，对于一个小 image patch 来说，里面的雨线都是一个近似的 blur kernel。</p><p><img src="https://i.loli.net/2018/09/03/5b8ce3ce772c3.png" alt=""></p><p><img src="https://i.loli.net/2018/09/03/5b8d4aeaa5628.png" alt=""></p><p>作者表示很多方法都是在 high-level component 上进行去雨，然后他们就选了最好实现的 guided filter model 来当成 low-pass filter。这样就把一个 rainy patch 给 decompose 成了两个部分：texture component 和 detail component。</p><p>  texture component 会包含所有的雨线、而且还更加 sparse，所以在 texture component 上面训练就足够 sufficient 且 compact。</p><p><img src="https://i.loli.net/2018/09/03/5b8d4aeaa313f.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Rain Streak Removal for Single Image via Kernel Guided CNN&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="paperReading" scheme="https://ir1d.cf/tags/paperReading/"/>
    
  </entry>
  
  <entry>
    <title>RESCAN 踩坑</title>
    <link href="https://ir1d.cf/2018/09/01/RESCAN-%E8%B8%A9%E5%9D%91/"/>
    <id>https://ir1d.cf/2018/09/01/RESCAN-踩坑/</id>
    <published>2018-09-01T11:20:12.000Z</published>
    <updated>2018-09-12T14:24:47.264Z</updated>
    
    <content type="html"><![CDATA[<p>Recurrent Squeeze-and-Excitation Context Aggregation Net for Single Image Deraining</p><a id="more"></a><p>用 Rain 800 中的 700 张当训练集，100张当验证集，用 rain100H 中取出来的 100 张当测试集。</p><p>release 的 data 里面 test_syn 其实是 val，training 其实是 train，testset 就自己去从 rain100H 里找 100 张吧。（我也不知道，我随便说的</p><ul><li>关于 DataLoader 就挂掉的问题：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    batch_t = next(dt_train)</span><br><span class="line"><span class="keyword">except</span> StopIteration:</span><br><span class="line">    dt_train = sess.get_dataloader(<span class="string">'train'</span>)</span><br><span class="line">    batch_t = next(dt_train)</span><br></pre></td></tr></table></figure><ul><li>关于 conda 怎么也装不上 pytorch 0.4</li></ul><p>上午怎么搞都只能装上 pytorch 0.12，可能是因为 cudnn 装不上更高版本吧……</p><p>然而人家 pip 直接就上了 0.4</p><ul><li>测试用 code 运行不起来</li></ul><p>因为 dataloader 和 train 的时候的不一样……</p><p>手写一下就吼了</p><p>对于这种 combine 到一起的图，掌握了 <code>np.hsplit(a, 切分个数)</code> 的新技能= =</p><p>以及还出现了多次把 ground truth 传进去测试的情况…… 不过发现一个很有意思的事情，ground truth 传进去之后输出也会丢失细节。</p><p>以及 <code>B, O = np.hsplit(img_pair, 2)</code> 被我写成了 <code>O, B = np.hsplit(img_pair, 2)</code></p><p>测出来比它文章里高很多啊QAQ ，原来是这不同的代码测起来还可以结果不一样的。</p><ul><li>test 的时候 batch_size 改成 1</li></ul><p>刚开始直接用的训练的时候的 64， 发现不能对齐，就把数据都给转成一样大小的了</p><ul><li><p>np.rot90 到底是不是无损的</p></li><li><p>np.narrow 是对闭区间操作的 [l, l + len]</p></li><li><p>莫名其妙测出来的 ssim 0.98 最后还是因为搞错了数据集</p></li></ul><p>后来又测出来一次 0.98，仔细检查了很久过程上没有出问题…… 最后发现果然= =，大家都这么厉害了……</p><ul><li>cv2.imwrite() 和 img.imsave() 的输出效果好像不太一样，混用导致了色偏</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// import matplotlib.image as img</span><br></pre></td></tr></table></figure><p>我一起写到这里吧……</p><p>eigen13 的 code 测出来会有一圈边框…… 导致直接测的话 psnr 很低 = =，删掉边框会正常一些。</p><p>测 Rain100L 上面 psnr 现在大家做到快 40 了，真的可怕= =</p><p>话说昨天跑 DetailNet 发现它是一个一个图读进来的 hmmm</p><p>然后发现 DetailNet 只能测 RGB 的图，单通道的 model 喂不进去…… 然而 RESCAN 就可以的啧</p><p>DetailNet 训出来 Loss 很低，但是也有之前跑 SRGAN 的时候遇到的纯蓝色色块之类的现象= =</p><p>很迷，不知道为啥</p><hr><ul><li><p>cv2.imwrite() 和 matplotlib 里面的img.imsave() 不能混用</p></li><li><p>test 的时候 batch_size 要改成 1，因为两个代码都是把结果 concat 起来，可能原paper的数据集图片都是一样大的</p></li><li><p>不同的层要分开定义，否则实际上相当于 share weight 了</p></li><li><p>pytorch_total_params = sum(p.numel() for p in model.parameters())，这个会把model里定义的东西都算进去，求出来的不一定是实际上使用的 parameter 个数。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Recurrent Squeeze-and-Excitation Context Aggregation Net for Single Image Deraining&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="paperReading" scheme="https://ir1d.cf/tags/paperReading/"/>
    
      <category term="python" scheme="https://ir1d.cf/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Manipulating Attributes of Natural Scenes via Hallucination</title>
    <link href="https://ir1d.cf/2018/09/01/Manipulating-Attributes-of-Natural-Scenes-via-Hallucination/"/>
    <id>https://ir1d.cf/2018/09/01/Manipulating-Attributes-of-Natural-Scenes-via-Hallucination/</id>
    <published>2018-09-01T01:43:21.000Z</published>
    <updated>2018-09-03T04:43:30.391Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Manipulating Attributes of Natural Scenes via Hallucination</li><li>Everybody Dance Now</li></ul><p>用上 hexoeditor 之后放图真心方便了</p><a id="more"></a><h2 id="Manipulating-Attributes-of-Natural-Scenes-via-Hallucination"><a href="#Manipulating-Attributes-of-Natural-Scenes-via-Hallucination" class="headerlink" title="Manipulating Attributes of Natural Scenes via Hallucination"></a>Manipulating Attributes of Natural Scenes via Hallucination</h2><p><img src="https://i.loli.net/2018/09/01/5b8a81c289931.png" alt=""></p><p>本文提出的方法可以让人们直接操作自然场景中的 high-level 信息，从而转换场景。</p><p><img src="https://i.loli.net/2018/09/01/5b8a81c256db7.png" alt=""></p><p><img src="https://i.loli.net/2018/09/01/5b8a81c38c335.png" alt=""></p><h2 id="Everybody-Dance-Now"><a href="#Everybody-Dance-Now" class="headerlink" title="Everybody Dance Now"></a>Everybody Dance Now</h2><p><img src="https://i.loli.net/2018/09/01/5b8a86f0737c3.png" alt=""></p><p><img src="https://i.loli.net/2018/09/01/5b8a86f031a06.png" alt=""></p><p><img src="https://i.loli.net/2018/09/01/5b8a86f008017.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Manipulating Attributes of Natural Scenes via Hallucination&lt;/li&gt;
&lt;li&gt;Everybody Dance Now&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用上 hexoeditor 之后放图真心方便了&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="paperReading" scheme="https://ir1d.cf/tags/paperReading/"/>
    
  </entry>
  
  <entry>
    <title>Gitment 配置</title>
    <link href="https://ir1d.cf/2018/08/22/gitment-%E9%85%8D%E7%BD%AE/"/>
    <id>https://ir1d.cf/2018/08/22/gitment-配置/</id>
    <published>2018-08-22T07:04:07.000Z</published>
    <updated>2018-08-22T07:45:06.460Z</updated>
    
    <content type="html"><![CDATA[<p>Gitment 原版的貌似没有在维护，后来改用了 Gitmint （加了统计和翻译），然而发现 gitment 的评论区是一个裸的 textarea，外面没有包上 form，然后 mkdocs-material 是判断不在 form 里来触发搜索功能的关键字的…… <a href="https://github.com/Ir1d/gitment/issues/20" target="_blank" rel="noopener">https://github.com/Ir1d/gitment/issues/20</a> （鸣谢褚老板发现这个坑）</p><p>然后为了修这个给 mkdocs-material 开 pr，人家表示正常的 textarea 都在 form 里面，你这种完全可以通过自定义 gitment 来搞定。</p><p>搜了下发现需要改 gitment 里面 render 的过程：<a href="https://github.com/24OI/OI-wiki/blob/master/static/disqus.html#L13-L26" target="_blank" rel="noopener">https://github.com/24OI/OI-wiki/blob/master/static/disqus.html#L13-L26</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">const myTheme = &#123;</span><br><span class="line">  render(state, instance) &#123;</span><br><span class="line">    const container = document.createElement(&apos;div&apos;)</span><br><span class="line">    container.lang = &quot;zh-CN&quot;</span><br><span class="line">    container.className = &apos;gitment-container gitment-root-container&apos;</span><br><span class="line">    const divv = document.createElement(&apos;form&apos;)</span><br><span class="line">    // container.appendChild(instance.renderSomething(state, instan)</span><br><span class="line">    container.appendChild(instance.renderHeader(state, instance))</span><br><span class="line">    divv.appendChild(instance.renderEditor(state, instance))</span><br><span class="line">    container.appendChild(divv)</span><br><span class="line">    container.appendChild(instance.renderComments(state, instance))</span><br><span class="line">    container.appendChild(instance.renderFooter(state, instance))</span><br><span class="line">    return container</span><br><span class="line">  &#125;,</span><br><span class="line">  renderSomething(state, instance) &#123;</span><br><span class="line">    const container = document.createElement(&apos;div&apos;)</span><br><span class="line">    container.lang = &quot;zh-CN&quot;</span><br><span class="line">    if (state.user.login) &#123;</span><br><span class="line">      container.innerText = `Hello, $&#123;state.user.login&#125;, 来说点什么吧？`</span><br><span class="line">    &#125;</span><br><span class="line">    return container</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">const gitment = new Gitment(&#123;</span><br><span class="line">  id: &apos;&#123;&#123; page.title | default(&quot;404&quot;, true)  &#125;&#125;&apos;,</span><br><span class="line">  theme: myTheme,</span><br><span class="line">  owner: &apos;Ir1d&apos;,</span><br><span class="line">  repo: &apos;gitment&apos;,</span><br><span class="line">  oauth: &#123;</span><br><span class="line">    client_id: &apos;d6a911c8fba0194626d4&apos;,</span><br><span class="line">    client_secret: &apos;867ec7e13cc99b420bd147cbb62d5cfec271ba81&apos;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line">gitment.render(&apos;gitment_container&apos;)</span><br></pre></td></tr></table></figure><p>然后直接推上生产（昨晚 Travis CI 和 Github 的通讯 bug 了，CI 过了但是 Github 上还是 pending = =）</p><p>然后发现点预览的时候会刷新整个页面= =，然后之前评论框里还没有提交的东西就丢了= =</p><p>搜了下发现 form 里面的 button 需要加上个 <code>type=&#39;button&#39;</code> 才可以不跳转。</p><p>这个就必须要改 renderEditor 里面的东西了，索性把整个 gitment.js 都给换掉好了……</p><p>在 gitment 的 issue 里搜了下，发现 <a href="https://www.kymjs.com" target="_blank" rel="noopener">https://www.kymjs.com</a> 的这位大佬搞了个翻译好的，就稍微改下，拿过来用了。</p><p>修改在：<a href="https://github.com/24OI/24oi.github.io/blob/master/gitment.js#L3063" target="_blank" rel="noopener">https://github.com/24OI/24oi.github.io/blob/master/gitment.js#L3063</a></p><p>其他的修改都是细节上魔改，与整体配置无关（x</p><p>所以就让 mkdocs 用上 gitment 啦！</p><p>完整配置在：<a href="https://github.com/24OI/OI-wiki/blob/master/static/disqus.html" target="_blank" rel="noopener">https://github.com/24OI/OI-wiki/blob/master/static/disqus.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Gitment 原版的貌似没有在维护，后来改用了 Gitmint （加了统计和翻译），然而发现 gitment 的评论区是一个裸的 textarea，外面没有包上 form，然后 mkdocs-material 是判断不在 form 里来触发搜索功能的关键字的…… &lt;a h
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="gitment" scheme="https://ir1d.cf/tags/gitment/"/>
    
      <category term="github" scheme="https://ir1d.cf/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Nginx HTTPS 配置</title>
    <link href="https://ir1d.cf/2018/08/22/nginx-HTTPS-%E9%85%8D%E7%BD%AE/"/>
    <id>https://ir1d.cf/2018/08/22/nginx-HTTPS-配置/</id>
    <published>2018-08-22T06:50:44.000Z</published>
    <updated>2018-08-22T07:49:01.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><a href="https://bjornjohansen.no/optimizing-https-nginx" target="_blank" rel="noopener">https://bjornjohansen.no/optimizing-https-nginx</a></p><p>这一套文都很厉害，包含了 nginx 以及 openssl 的安装、配置、优化。</p><p>以及真的佩服这位 dalao 给每篇文章都配上插图。</p><h2 id="两个生成配置用的工具"><a href="#两个生成配置用的工具" class="headerlink" title="两个生成配置用的工具"></a>两个生成配置用的工具</h2><p><a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/" target="_blank" rel="noopener">https://mozilla.github.io/server-side-tls/ssl-config-generator/</a></p><p><a href="https://wiki.mozilla.org/Security/Server_Side_TLS" target="_blank" rel="noopener">https://wiki.mozilla.org/Security/Server_Side_TLS</a></p><h2 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h2><p><a href="https://myssl.com/" target="_blank" rel="noopener">https://myssl.com/</a></p><p><a href="https://www.ssllabs.com" target="_blank" rel="noopener">https://www.ssllabs.com</a></p><h2 id="acme-sh"><a href="#acme-sh" class="headerlink" title="acme.sh"></a>acme.sh</h2><p><a href="https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert</a></p><p>wiki 里面没有说多个域名怎么配，其实就是直接把单个域名的合到一起就好了。就比如我</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --issue  -d oi-wiki.org -d *.oi-wiki.org -d oi-wiki.cf -d *.oi-wiki.cf --dns dns_dp</span><br></pre></td></tr></table></figure><p>这里 dns_dp 是指 dnspod，第一个 -d 后面的域名是会显示在证书上（比如说访问 <a href="https://oi-wiki.cf" target="_blank" rel="noopener">https://oi-wiki.cf</a> ，会显示证书是给 <a href="https://oi-wiki.org" target="_blank" rel="noopener">https://oi-wiki.org</a> 的）。</p><p>用 dns 来验证真的方便，因为配了旧域名到新域名的跳转，nginx 验证总是不过。</p><p>改成 dns 之后就一波带走…… </p><p><a href="https://github.com/Neilpang/acme.sh/tree/master/dnsapi" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh/tree/master/dnsapi</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;教程&quot;&gt;&lt;a href=&quot;#教程&quot; class=&quot;headerlink&quot; title=&quot;教程&quot;&gt;&lt;/a&gt;教程&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://bjornjohansen.no/optimizing-https-nginx&quot; target=&quot;_bla
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="nginx" scheme="https://ir1d.cf/tags/nginx/"/>
    
      <category term="https" scheme="https://ir1d.cf/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>OI Wiki 征稿与招募启事</title>
    <link href="https://ir1d.cf/2018/08/12/%E5%BE%81%E7%A8%BF%E4%B8%8E%E6%8B%9B%E5%8B%9F%E5%90%AF%E4%BA%8B/"/>
    <id>https://ir1d.cf/2018/08/12/征稿与招募启事/</id>
    <published>2018-08-11T16:49:17.000Z</published>
    <updated>2018-08-11T16:51:38.645Z</updated>
    
    <content type="html"><![CDATA[<p>（本文得到了很多朋友的指点，十分感谢！）</p><p>文章于 11 日下午发于 <a href="https://zhuanlan.zhihu.com/p/41747466" target="_blank" rel="noopener">知乎</a>，以及 LOJ、 UOJ、 Judge Duck 的讨论区。</p><h1 id="OI-Wiki-征稿与招募启事"><a href="#OI-Wiki-征稿与招募启事" class="headerlink" title="OI Wiki 征稿与招募启事"></a>OI Wiki 征稿与招募启事</h1><p>咦？ <strong>OI Wiki</strong> 是个啥？其实是某大型游戏线上攻略啦，围观地址：<a href="https://oi-wiki.cf" target="_blank" rel="noopener">Getting Started - <strong>OI Wiki</strong></a></p><hr><p>亲爱的 <strong>OIer</strong> 同学们：</p><p><strong>OI Wiki</strong> 致力于成为一个免费开放且持续更新的知识整合站点，大家可以在这里学习到关于 <strong>OI</strong> 竞赛有趣又实用的知识。我们为大家准备了 <strong>OI</strong> 竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习 <strong>OI</strong> 竞赛。</p><p>目前，<strong>OI Wiki</strong> 正在完善各大方向的基础知识，以便于初学者更好地学习。<br>当然，<strong>OI Wiki</strong> 基于 <strong>OI</strong>，却不会局限于 <strong>OI</strong>。<strong>OI Wiki</strong> 也会努力完善以下内容：</p><ul><li><p>应用在 ACM-ICPC 竞赛中的进阶知识</p></li><li><p>算法竞赛中的优质题目</p></li></ul><p>与此同时， <strong>OI Wiki</strong> 源于社区，提倡知识自由，在未来也绝不会商业化，将始终保持独立自由的性质。</p><p>在过去的一个月中，<strong>OI Wiki</strong> 见证了 199 次更新，十余位热心同学参与了条目的编写与完善，项目也得到了很多朋友的大力支持。目前，我们已经完成了原计划中 28 % 的内容，工作仍然还处于初期阶段，在此诚挚向诸君征稿：</p><p>我们欢迎各种形式的 <strong>OI</strong> 相关的内容，不论是知识点、题目、赛制介绍，还是可能会使用到的工具软件，只要你觉得可以对别人有帮助，我们都热诚欢迎。</p><p>联系方式：<br>Telegram 群组： <a href="https://t.me/OIwiki" target="_blank" rel="noopener">@OIwiki</a> ；QQ 群：<a href="https://jq.qq.com/?_wv=1027&amp;k=5EfkM6K" target="_blank" rel="noopener">588793226</a>。<br>欢迎各位加入～</p><hr><h3 id="F-A-Q"><a href="#F-A-Q" class="headerlink" title="F.A.Q."></a><strong>F.A.Q.</strong></h3><p>Q：你们是为什么想要做这个 Wiki 的呢？</p><p>A：不知道你在学 <strong>OI</strong> 的时候，面对庞大的知识体系，有没有感到过迷茫无助的时候？<strong>OI Wiki</strong> 想要做的事情可能类似于“让更多竞赛资源不充裕的同学能方便地接触到训练资源”。当然这么表述也不完全，做 Wiki 的动机可能也很纯粹，只是简单地想要对 <strong>OI</strong> 的发展做出一点点微小的贡献吧。XD</p><p>Q：我很感兴趣，怎么参与呢？</p><p>A：<strong>OI Wiki</strong> 现在托管在 <a href="https://github.com/24OI/OI-wiki" target="_blank" rel="noopener">Github</a> 上，你可以直接访问这个 <a href="https://github.com/24OI/OI-wiki" target="_blank" rel="noopener">repo</a> 来查看最新进展。参与的途径包括在 <a href="https://github.com/24OI/OI-wiki" target="_blank" rel="noopener">Github</a> 上面开 Issue、Pull Request，或者在交流群中分享你的想法、直接向管理员投稿。目前，我们使用的框架是 <a href="https://mkdocs.readthedocs.io" target="_blank" rel="noopener">mkdocs</a>，支持 Markdown 格式（当然也支持插入数学公式）。</p><p>Q：可是我比较弱…… 不知道我能做点什么？</p><p>A：一切源于热爱。你可以协助其他人审核修改稿件，帮助我们宣传 <strong>OI Wiki</strong> ，为社区营造良好学习交流氛围！</p><p>Q：现在主要是谁在做这件事啊？感觉这是个大坑，真的能做好吗？</p><p>A：现在主要是一些退役老年选手在做这件事，靠的都是信仰。这种“用爱发电”的事情，困难重重，我们也不知道能不能做好。但是如果这件事能够推动 <strong>OI</strong> 的发展，也是蛮有意义的呢。我们希望在这里打的这个广告，可以帮助这个团队遇见更多志同道合的人。</p><p>Q：听说过 nocow 吧，<strong>OI Wiki</strong> 怎么保证我们添加的内容不会像 nocow 那样突然间就不见了呢？</p><p>A：我们把内容托管在 <a href="https://github.com/24OI/OI-wiki" target="_blank" rel="noopener">Github</a> 上面，即使我们的服务器翻车了，内容也不会丢失。另外，我们也会定期备份大家的心血，即使有一天 <a href="https://github.com/24OI/OI-wiki" target="_blank" rel="noopener">Github</a> 倒闭了（？），我们的内容也不会丢失。</p><p>Q：<strong>OI Wiki</strong> 好像现在大部分内容都是空的啊？</p><p>A：是的，目前进度只完成了 28%，还远远称不上是一个合格的 Wiki。在过去的一个月里，主要添加的内容也比较基础。所以在这里进行征稿和招募，希望可以遇到有同样想法的朋友，我们一起把 <strong>OI Wiki</strong> 完善起来。</p><hr><p>感谢你看到了最后，我们现在急需的，就是你的帮助。</p><p><strong>OI Wiki</strong> Team</p><p>2018.8</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;（本文得到了很多朋友的指点，十分感谢！）&lt;/p&gt;
&lt;p&gt;文章于 11 日下午发于 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/41747466&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎&lt;/a&gt;，以及 LOJ、 UO
      
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="OIWiki" scheme="https://ir1d.cf/tags/OIWiki/"/>
    
  </entry>
  
  <entry>
    <title>derain2018部分小结</title>
    <link href="https://ir1d.cf/2018/08/12/derain2018%E9%83%A8%E5%88%86%E5%B0%8F%E7%BB%93/"/>
    <id>https://ir1d.cf/2018/08/12/derain2018部分小结/</id>
    <published>2018-08-11T16:42:43.000Z</published>
    <updated>2018-08-11T17:03:24.954Z</updated>
    
    <content type="html"><![CDATA[<p>直接粘过来好了，和大家分享一下</p><p>内容是 9 篇 single image deraining 的工作，是不完全整理。</p><p>paper list 参见：<a href="https://github.com/flyywh/Rain-Removal" target="_blank" rel="noopener">https://github.com/flyywh/Rain-Removal</a></p><a id="more"></a><h2 id="xUnit"><a href="#xUnit" class="headerlink" title="xUnit"></a>xUnit</h2><ul><li>Spatial Activation instead of perpixel activation —&gt; learn</li><li>use fewer layers to match the performance (also fewer param)</li><li>use less training example</li><li>一个位置的信息通过 ReLU 的时候要么乘上0 要么乘1。 考虑改成乘 $e^{-d_k^2}$</li><li>xUnit 的结构既有 nonlineariry(ReLU)，又有spatial processing (depth-wise convolution)</li><li>可视化结果发现很多 xnet activation和1（白色）接近，说明更多的channel 参与了 denoising</li><li>它把denoising 的 network 直接用来去雨，得到很不错的结果</li></ul><h2 id="DID-MDN"><a href="#DID-MDN" class="headerlink" title="DID-MDN"></a>DID-MDN</h2><ul><li>一个网络可能不能很好处理不同密集程度的雨线</li><li>文中把去雨过程分成两部分，先对雨线密集程度进行分类，然后再进行去雨</li><li>分类的过程是用和后面去雨那部分一样的网络结构，相当于是两个 branch，后一个branch另外加上了雨线密集程度的信息。</li><li>为什么不直接用 vgg fine-tune 呢？因为 vgg tend to pay more attention to localize the discriminative objects，雨线相对较小，难以在 high-level feature 中 很好地 localize.</li><li>training detail</li><li>classfier 的 训练是two stage，刚开始单独训练 resudual feature extraction network，来估计 residual part，然后再用 estimation 结果当做输入带训练 classification sub-network。最后再 joint optimize</li><li>multi scale 是考虑雨线的大小不一样，用不同的 receptive field 来捕捉这方面信息。</li><li>表格信息（NLEDN 里面好像没有这篇里面自己效果这么好）</li></ul><h2 id="Removing-rain-based-on-a-cycle-generative-adversarial-network"><a href="#Removing-rain-based-on-a-cycle-generative-adversarial-network" class="headerlink" title="Removing rain based on a cycle generative adversarial network"></a>Removing rain based on a cycle generative adversarial network</h2><p>CycleGAN-based</p><ul><li>Industrial Electronics and Applications (ICIEA)</li><li>深研院的</li><li>Loss functions</li><li>Cycle loss: strengthen the generator ability to distinguish between rain line and background</li><li>Color loss: to solve the problem of color shift in deraining images.</li><li>Texturue loss (transform into grayscale)</li><li>Dark channel loss</li><li>TV Loss : obtain a smooth result</li></ul><h2 id="DualCNN"><a href="#DualCNN" class="headerlink" title="DualCNN"></a>DualCNN</h2><ul><li>DualCNN。将structure与details分别训练</li><li>loss 是 l2 loss</li><li>detail + structure</li><li>ignore detail_loss in derain</li><li>Our goal is to learn the filtered image which does not contain rich details. —&gt; $\gamma = 0$</li><li>用在 derain 的时候，structure 部分是用的 clean image</li></ul><h2 id="Residual-Guide-Network"><a href="#Residual-Guide-Network" class="headerlink" title="Residual-Guide Network"></a>Residual-Guide Network</h2><ul><li>把 Basline block 简单串联起来效果并不好，需要利用中间信息来引导后面的 block 提取新的信息。</li><li>每一个大 block 里面是不断循环的（相当于是用同样的卷积层） （kernel reuse）</li><li>后面的每一个小块都加上最开头的那个小块（propagate all information forward from output of the first layer within each block）</li><li>最后面用 1x1 卷积 来 merge 所有的中间结果得到最终结果</li><li>ResGuideNet_5 是有 5 个 大block 且 没有进行 merge的</li></ul><h2 id="Semi-supervised-CNN-for-Single-Image-Rain-Removal"><a href="#Semi-supervised-CNN-for-Single-Image-Rain-Removal" class="headerlink" title="Semi-supervised CNN for Single Image Rain Removal"></a>Semi-supervised CNN for Single Image Rain Removal</h2><ul><li>the short-of-training-sample and bias-to-supervised-sample issues can be evidently alleviated</li><li>use the network to  formulate the residual between an input and its expected clear image (as a mixture of gaussian distribution)</li><li>objective function is the combination of supervised data loss (least square loss) and unsupervised data loss</li><li>optimized by least square residuals on supervised samples</li><li><p>&amp; patch-wised MoG (P-MoG) loss on unsupervised ones</p></li><li><p>网络的输出是 negative residual (opposite of the rain layer)</p></li><li>非监督部分：最小化 negative 雨线分布的 log-likelihood</li></ul><h2 id="NLEDN"><a href="#NLEDN" class="headerlink" title="NLEDN"></a>NLEDN</h2><ul><li>non-locally enhanced encoder-decoder network</li><li>fully exploit hierarchical features &amp; capture the long-distance dependencies and structural information</li><li>multi-scale non-local enhancement (原图分成8x8块)</li><li>dense block 和 resguide 一样</li></ul><h2 id="Joint-Bi-Layer-Optimize"><a href="#Joint-Bi-Layer-Optimize" class="headerlink" title="Joint Bi-Layer Optimize"></a>Joint Bi-Layer Optimize</h2><ul><li>locate rain-dominated regions &amp; estimate dominant direction</li><li><p>extract rain patches from regions to model the rain pattern</p></li><li><p>保真项</p></li><li>三个 prior</li><li>Sparsity prior: CSR: centralized sparse representation</li><li>Rain direction prior: 假设不和雨线方向垂直的 gradients 不太可能是属于雨线</li><li>Rain layer prior：在B上 regularize 可能会 smooth out 一些 背景信息，这个项的作用是 用 weighted laplacian term</li><li><p>优化方法</p><ul><li>先更新B<ul><li>交替地更新 $\alpha$ 和 B</li></ul></li><li>后更新R<h2 id="Simulated-Unsupervised-S-U-learning"><a href="#Simulated-Unsupervised-S-U-learning" class="headerlink" title="Simulated+Unsupervised (S+U) learning"></a>Simulated+Unsupervised (S+U) learning</h2></li></ul></li><li><p>uses unlabeled real data to refine the synthetic images</p></li><li>refiner network</li><li>l_real指的是refine之后的合成图片(x_i’)和真实图片Y之间的loss。l_reg是原始合成图片x_i和被refine之后的合成图片的x_i’之间的loss。lambda是一个高参</li><li>Refiner的目标就是尽可能的糊弄判别器D，让判别器没有办法区分一个图片是real还是合成的。判别器D的目标正好相反，是尽可能的能够区分出来</li><li>self-regularization loss 就是让refine之后的图片像素点和原始的图片的像素点之间的差不要太大</li><li>用refined的历史图片作为一个buffer而不单单是当前的mini-batch来更新分类器</li><li>在每一轮分类器的训练中，我们先从当前的batch中采样b/2张图片，然后从大小为B的buffer中采样b/2张图片，合在一起来更新判别器的参数。然后这一轮之后，用新生成的b/2张图片来替换掉B中的b/2张图片</li><li>instead of global discriminator, out discriminator classifies all local image patches separately. 好处是输入更小，感受野更小，而且会对每张原图得到更多让判别器学习的指标</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接粘过来好了，和大家分享一下&lt;/p&gt;
&lt;p&gt;内容是 9 篇 single image deraining 的工作，是不完全整理。&lt;/p&gt;
&lt;p&gt;paper list 参见：&lt;a href=&quot;https://github.com/flyywh/Rain-Removal&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/flyywh/Rain-Removal&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://ir1d.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="GAN" scheme="https://ir1d.cf/tags/GAN/"/>
    
      <category term="derain" scheme="https://ir1d.cf/tags/derain/"/>
    
  </entry>
  
  <entry>
    <title>给mkdocs用上gitment</title>
    <link href="https://ir1d.cf/2018/08/12/%E7%BB%99mkdocs%E7%94%A8%E4%B8%8Agitment/"/>
    <id>https://ir1d.cf/2018/08/12/给mkdocs用上gitment/</id>
    <published>2018-08-11T16:35:51.000Z</published>
    <updated>2018-08-11T16:47:15.492Z</updated>
    
    <content type="html"><![CDATA[<p>我用的是 mkdocs-material 这个主题，作者代码、文档写得都很清楚，在 Github 上面也很活跃，反馈也很快。</p><p>换一套好用的评论系统，困难是 disqus 和 livere 访问速度都不太行，livere 更过分的是还要去调用一个 Google Analytics 的 js = =</p><p>决定试一下 gitment，发现用在 wiki 里面可以很好地避免标题过长，超过 issue 限制的问题（相对于个人博客乱写的标题而言）。</p><p>具体方法是改那个 <a href="https://github.com/24OI/OI-wiki/blob/master/static/disqus.html" target="_blank" rel="noopener">disqus.html</a></p><p>然后部署的时候 <a href="https://github.com/24OI/OI-wiki/blob/master/build.sh#L21：" target="_blank" rel="noopener">https://github.com/24OI/OI-wiki/blob/master/build.sh#L21：</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ./static/disqus.html mkdocs-material/material/partials/integrations/disqus.html</span><br></pre></td></tr></table></figure><p>改的时候不要忘记留着 <a href="https://github.com/24OI/OI-wiki/blob/master/static/disqus.html#L7：" target="_blank" rel="noopener">https://github.com/24OI/OI-wiki/blob/master/static/disqus.html#L7：</a></p><p><code>&lt;h2 id=&quot;__comments&quot;&gt; foo &lt;/h2&gt;</code>，这个 id 是用来在右侧的目录里面加一个到 “评论区” 的跳转。</p><p>上面这顿操作实际上就是替换了 disqus 加载 js 的过程，由于偷懒，在设置（mkdocs.yml）里面还是要标记成正在使用 disqus。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我用的是 mkdocs-material 这个主题，作者代码、文档写得都很清楚，在 Github 上面也很活跃，反馈也很快。&lt;/p&gt;
&lt;p&gt;换一套好用的评论系统，困难是 disqus 和 livere 访问速度都不太行，livere 更过分的是还要去调用一个 Google 
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="gitment" scheme="https://ir1d.cf/tags/gitment/"/>
    
      <category term="mkdocs" scheme="https://ir1d.cf/tags/mkdocs/"/>
    
  </entry>
  
  <entry>
    <title>pytorch小结</title>
    <link href="https://ir1d.cf/2018/08/03/pytorch%E5%B0%8F%E7%BB%93/"/>
    <id>https://ir1d.cf/2018/08/03/pytorch小结/</id>
    <published>2018-08-03T11:52:26.000Z</published>
    <updated>2018-08-03T16:19:41.615Z</updated>
    
    <content type="html"><![CDATA[<p>官方 tutorial 里面下下来的 cifar-10-python 大小是 341M。= = 请做好心理准备</p><p>backward 的时候是把 gradient 加上去，所以每次操作一个新的 mini-batch 的时候，都要手动先 <code>.zero_grad()</code></p><p>另外好像现在不用每个东西后面跟一堆 <code>.cuda()</code>，好像直接 <code>net.to(device)</code> 就好了？唯一需要注意的就是输入输出也要在相同的 device 上面？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;官方 tutorial 里面下下来的 cifar-10-python 大小是 341M。= = 请做好心理准备&lt;/p&gt;
&lt;p&gt;backward 的时候是把 gradient 加上去，所以每次操作一个新的 mini-batch 的时候，都要手动先 &lt;code&gt;.zero_gr
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="python" scheme="https://ir1d.cf/tags/python/"/>
    
      <category term="pytorch" scheme="https://ir1d.cf/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>conda重置environment状态</title>
    <link href="https://ir1d.cf/2018/08/02/conda%E9%87%8D%E7%BD%AEenvironment%E7%8A%B6%E6%80%81/"/>
    <id>https://ir1d.cf/2018/08/02/conda重置environment状态/</id>
    <published>2018-08-02T08:56:27.000Z</published>
    <updated>2018-08-04T01:23:03.416Z</updated>
    
    <content type="html"><![CDATA[<p>看到一个 comment 是说 conda 应该 base 留空，然后各种包开新的 environment 实验。</p><p>可是我已经装了一堆东西，又不想重装 conda = =</p><p>搜了下发现还是有这个 feature 的。</p><p><a href="https://stackoverflow.com/questions/41914139/how-to-reset-anaconda-root-environment" target="_blank" rel="noopener">https://stackoverflow.com/questions/41914139/how-to-reset-anaconda-root-environment</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda list --revisions</span><br><span class="line">conda install --rev 0</span><br></pre></td></tr></table></figure><p>0 就是要回退到哪个版本</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看到一个 comment 是说 conda 应该 base 留空，然后各种包开新的 environment 实验。&lt;/p&gt;
&lt;p&gt;可是我已经装了一堆东西，又不想重装 conda = =&lt;/p&gt;
&lt;p&gt;搜了下发现还是有这个 feature 的。&lt;/p&gt;
&lt;p&gt;&lt;a href=
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="python" scheme="https://ir1d.cf/tags/python/"/>
    
      <category term="conda" scheme="https://ir1d.cf/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>pix2pix踩坑</title>
    <link href="https://ir1d.cf/2018/08/01/pix2pix%E8%B8%A9%E5%9D%91/"/>
    <id>https://ir1d.cf/2018/08/01/pix2pix踩坑/</id>
    <published>2018-07-31T16:30:25.000Z</published>
    <updated>2018-07-31T16:36:29.325Z</updated>
    
    <content type="html"><![CDATA[<p>找了个 pytorch 实现的 pix2pix 踩了不少坑== </p><p>用的这个人的：<a href="https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix" target="_blank" rel="noopener">https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix</a></p><p>注意 doc 里面说可以怎么怎么样，然而代码里写的是 pix2pix 必须得用正方形的图= =</p><p>然后趁机掌握了 cv2 resize 的各种姿势= =</p><p>看 options 里面有很多选项，其实直接用 scripts 文件夹里现成的就好了</p><p>要注意的是训练和测试的方向= =</p><p>看好自己要 AtoB 还是 BtoA</p><p>（以及有个 qa.md 和 tips.md）根本没有链接，藏在代码里头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># train</span><br><span class="line">python train.py --dataroot ./AB / --name rain --model pix2pix --which_direction AtoB --gpu_ids 0,1 --fineSize 480 --resize_or_crop crop</span><br><span class="line"></span><br><span class="line"># test</span><br><span class="line">python test.py --dataroot ./AB --name deraindrop_pix2pix --model pix2pix --which_model_netG unet_256 --which_direction AtoB --dataset_mode aligned --norm batch --resize_or_crop none</span><br></pre></td></tr></table></figure><p>上面好像并不对</p><p>还有个参数，是控制测试的时候用多少张的，默认是 50 = =，要手动改成自己的才行。</p><hr><p>mark 一下尝试跑通了 attentive-GAN</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CUDA_VISIBLE_DEVICES=0 python test.py --mode demo --input_dir ./100/input/ --output_dir ./100/output/</span><br></pre></td></tr></table></figure><p>hmmmm test.py 我自己重写了，大概就是把 demo 和 test 合到一起= =，既存结果又测 psnr。</p><p>要占用 7G+ 的显存= =</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;找了个 pytorch 实现的 pix2pix 踩了不少坑== &lt;/p&gt;
&lt;p&gt;用的这个人的：&lt;a href=&quot;https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="python" scheme="https://ir1d.cf/tags/python/"/>
    
      <category term="pix2pix" scheme="https://ir1d.cf/tags/pix2pix/"/>
    
  </entry>
  
  <entry>
    <title>python-opencv</title>
    <link href="https://ir1d.cf/2018/07/30/python-opencv/"/>
    <id>https://ir1d.cf/2018/07/30/python-opencv/</id>
    <published>2018-07-30T02:36:08.000Z</published>
    <updated>2018-07-30T02:45:43.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开多张图片后内存不足的问题"><a href="#打开多张图片后内存不足的问题" class="headerlink" title="打开多张图片后内存不足的问题"></a>打开多张图片后内存不足的问题</h2><p><a href="https://stackoverflow.com/questions/19414289/python-and-memory-consumption-when-opening-tiff-images" target="_blank" rel="noopener">https://stackoverflow.com/questions/19414289/python-and-memory-consumption-when-opening-tiff-images</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gc</span><br><span class="line">gc.collect()</span><br></pre></td></tr></table></figure><h2 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h2><p><code>conda clean --all</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;打开多张图片后内存不足的问题&quot;&gt;&lt;a href=&quot;#打开多张图片后内存不足的问题&quot; class=&quot;headerlink&quot; title=&quot;打开多张图片后内存不足的问题&quot;&gt;&lt;/a&gt;打开多张图片后内存不足的问题&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://stack
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="opencv" scheme="https://ir1d.cf/tags/opencv/"/>
    
      <category term="python" scheme="https://ir1d.cf/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ss在局域网共享</title>
    <link href="https://ir1d.cf/2018/07/30/ss%E5%9C%A8%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/"/>
    <id>https://ir1d.cf/2018/07/30/ss在局域网共享/</id>
    <published>2018-07-30T00:48:19.000Z</published>
    <updated>2018-07-30T00:49:44.491Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/ss-local.asciidoc" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/ss-local.asciidoc</a></p><p>看这里有一个 <code>-b &lt;local_address&gt;</code></p><p>在 <code>ss-local</code> 的命令后面加上 <code>-b 0.0.0.0</code> 就好了= =</p><p>如果是用配置文件，写法是 <a href="https://github.com/shadowsocks/shadowsocks-libev/issues/1441#issuecomment-293134272" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-libev/issues/1441#issuecomment-293134272</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/ss-local.asciidoc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://githu
      
    
    </summary>
    
      <category term="操作" scheme="https://ir1d.cf/categories/%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="shadowsocks" scheme="https://ir1d.cf/tags/shadowsocks/"/>
    
  </entry>
  
</feed>
